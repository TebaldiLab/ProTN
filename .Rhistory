shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
input_settings[1]
message(names(input_settings))
#Read the design
input_settings<-read_excel_allsheets(params$contr_design)
input_settings<-read_excel_allsheets("C:\Users\gabry\AppData\Local\Temp\RtmpSIGqxt/22e27714f2df9c034f668e3b/0.xlsx")
input_settings<-read_excel_allsheets("C:/Users/gabry/AppData/Local/Temp/RtmpSIGqxt/22e27714f2df9c034f668e3b/0.xlsx")
input_settings<-read_excel_allsheets("case_study_example/design.xlsx")
input_settings<-read_excel_allsheets("case_study_example/design.xlsx")[1]
input_settings<-read_excel_allsheets("case_study_example/design.xlsx")[[1]]
View(input_settings)
#Read the design
input_settings<-read_excel_allsheets(params$contr_design)[[1]]
contr_design<-data.frame(t(input_settings[1:nrow(input_settings),]))
contr_design<-data.frame(contr_design[,colSums(is.na(contr_design)) != nrow(contr_design) ])
if(ncol(contr_design) > 0){
if(is.na(contr_design[3,])){
contr_design[3,]<-color_base[1:ncol(contr_design)]
}
contr_design<-data.frame(t(fill(contr_design, names(contr_design), .direction = "down")))
contr_design[,2]<-unlist(lapply(contr_design[,2], function(x){ if("-" %in% x){str_replace_all(x,"-","_")}else{x}}))
formule_contrast<-(contr_design[,1])
names(formule_contrast)<-contr_design[,2]
color_constrast<-contr_design[,3]
names(color_constrast)<-contr_design[,2]
darker.col = function(color, how.much = 50){
colorRampPalette(c(color, "black"))(100)[how.much]
}
color_constrast_dark<-c()
for(col in names(color_constrast)){
color_constrast_dark[col]<-darker.col(color_constrast[col])
}
color_constrast<-cbind(color_constrast,color_constrast_dark)
}else{
stop("Error: At least one contrast design is required for the analysis.")
}
runApp()
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/input_se.RData")
contr_design<-data.frame(t(input_settings[1:nrow(input_settings),]))
contr_design<-data.frame(contr_design[,colSums(is.na(contr_design)) != nrow(contr_design) ])
is.na(contr_design[3,]
)
runApp()
runApp()
pval_enrich_thr <- suppressWarnings(parse_double(params$pval_enrich_thr))
pval_enrich_thr <- suppressWarnings(parse_double(params$pval_enrich_thr))
pval_enrich_thr <- suppressWarnings(parse_double(params$pval_enrich_thr))
runApp()
#Read all files in the input folder
template_files=c("Input","pep","prot")
filenames <- list("Input"=params$file_input,"prot"=params$file_prot,"pep"=params$file_pep)
input_files<-list("FILES")
for (f in template_files){
input_files[f] <- tryCatch({
read_excel_allsheets(filenames[f])
# read_excel_allsheets(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))]))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}
runApp()
runApp()
runApp()
library(shiny)
#The path is to the folder, not the app file (app should be called app.R or server.R/ui.R)
runApp("", launch.browser = T, host = "127.0.0.1", port = 8100)
#The path is to the folder, not the app file (app should be called app.R or server.R/ui.R)
runApp("/UNITN/LM_QCB/Proteomics_internship/ProTN/", launch.browser = T, host = "127.0.0.1", port = 8100)
run_enrich <- as.logical(params$run_enrich)
run_enrich <- as.logical(params$run_enrich)
# Set up parameters to pass to Rmd document
params <- list(doc_title = input$title_exp,
description = input$description_exp,
readPD_files = if(input$sw_analyzer =="PD"){TRUE}else{FALSE},
readMQ_files = if(input$sw_analyzer =="MQ"){TRUE}else{FALSE},
file_input = input$input_file$datapath,
file_prot = input$prot_file$datapath,
file_pep = input$pep_file$datapath,
signal_thr = input$signal_DEPs,
fc_thr = input$FC_DEPs,
pval_thr = input$pvalue_DEPs,
batch_corr_exe = input$batch_corr,
contr_design = input$design$datapath,
prot_boxplot = input$prot_boxplot,
run_enrich = input$enrichR,
run_STRING = input$STRING,
if(run_enrich){
pval_enrich_thr = parse_double(input$pvalue_enrich)
overlap_size_enrich_thr = input$os_enrich
enrich_filter_term = input$terms_enrich
enrich_filter_DBs = input$DB_enrich
})
pval_enrich_thr <- tryCatch({
(parse_double(params$pval_enrich_thr))
}, error=function(cond){
params$pval_enrich_thr
})
message("HERE1")
if(is.na(pval_enrich_thr)){
message("Warning: parse error for p-value enrichment threshold. Set default paramenter to 0.05\n")
pval_enrich_thr <- 0.05
}
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
for (f in template_files){
if(f == template_files[1]){
input_files[f] <- tryCatch({
read_excel_allsheets(filenames[f])
# read_excel_allsheets(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))]))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}else{
input_files[f] <- tryCatch({
list(read_tsv(filenames[f]))
# list(read_tsv(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))])))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}
}
f == template_files[1]
filenames[f]
filenames[f][[1]]
for (f in template_files){
if(f == template_files[1]){
input_files[f] <- tryCatch({
read_excel_allsheets(filenames[f][[1]])
# read_excel_allsheets(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))]))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}else{
input_files[f] <- tryCatch({
list(read_tsv(filenames[f][[1]]))
# list(read_tsv(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))])))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}
}
read_excel_allsheets(filenames[f][[1]])
source("functions_2021.R")
read_excel_allsheets(filenames[f][[1]])
for (f in template_files){
if(f == template_files[1]){
input_files[f] <- tryCatch({
read_excel_allsheets(filenames[f][[1]])
# read_excel_allsheets(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))]))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}else{
input_files[f] <- tryCatch({
list(read_tsv(filenames[f][[1]]))
# list(read_tsv(paste0(dir_file_input,filenames[which(grepl(f,filenames) & !grepl('~', filenames))])))
}, error=function(cond){
stop(paste0("Error: missing file. The file \'",f,"\' is missing or not have the pattern in the filename or there are duplicates files."))
})
}
}
names(input_files)<-c("dir","Input","PEP","PROT")
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
typeof(signal_thr)
typeof(fc_thr)
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
View(cond)
cond[["message"]]
dirOutput_Server
dirOutput_Server<-"C:/Users/gabry/AppData/Local/Temp/Rtmpwv0qMt/20221122135550"
dirOutput_Server<-"C:/Users/gabry/AppData/Local/Temp/Rtmpwv0qMt/20221122135550/Ã¹"
dirOutput_Server<-"C:/Users/gabry/AppData/Local/Temp/Rtmpwv0qMt/20221122135550/"
files2zip <- withr::with_dir(dirOutput_Server, dir("./", full.names = TRUE))
files2zip
install.packages("shinymaterial")
library(shinyjs)
load("T:/UNITN/LM_QCB/Proteomics_internship/ProTN/lib/tmp.RData")
View(params)
